<?php
namespace app\index\controller;

use app\common\controller\IndexCommon;
use app\index\model\Article as ArticleModel;
use think\Db;
use think\Cache;
use think\Config;

class Index extends IndexCommon
{
    protected $navList;
    protected $article_model;
    protected $reading_limit = 100000;
    protected $articleKey;
    protected $articleReadingKey;

    protected function _initialize()
    {
        $this->articleKey        = Config::get('rediskey.articlekey');
        $this->articleReadingKey = Config::get('rediskey.articleReadingkey');

        $this->article_model = new ArticleModel();
        $this->getSiteConfig();
        parent::_initialize(); // TODO: Change the autogenerated stub
    }

    public function index()
    {
        $this->getArticle();
        return $this->fetch();
    }


    /**
     * 文章列表
     */
    protected function getArticle()
    {
        $articleList = $this->article_model
            ->where('status', 1)
            ->order('publish_time desc')
            ->paginate(8);

        $page = $articleList->render();
        $this->assign('articleList', $articleList);
        $this->assign('page', $page);
    }


    /**
     * 文章详情
     * @param $en_title
     * @return mixed
     */
    public function article($en_title)
    {
        $articleKey        = $this->articleKey.$en_title;
        $articleReadingKey = $this->articleReadingKey.$en_title;

        $value             = Cache::get($articleKey);
        $readingValue      = Cache::get($articleReadingKey);

        //限制最大阅读数
        if ($readingValue <= $this->reading_limit - 1)
            Cache::inc($articleReadingKey);

        if (!empty($value)) {
            $article = $value;
        } else {
            $map['status'] = 1;
            $map['en_title'] = $en_title;
            $article = $this->article_model
                ->where($map)
                ->find();

            if (!empty($article)) {
                $article = $article->toArray();
                Cache::set($articleKey, $article);
            } else {
                $this->error('页面不存在');
            }
        }
        return $this->fetch('article', ['article' => $article, 'reading' => $readingValue]);
    }


    /**
     * 获取站点配置
     */
    public function getSiteConfig()
    {
        $site_config = Db::name('system')
            ->field('value')
            ->where('name', 'site_config')
            ->find();

        $site_config = unserialize($site_config['value']);
        $this->assign('site', $site_config);
    }

}
