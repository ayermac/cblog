<?php
/**
 * Created by PhpStorm.
 * User: Jason
 * Date: 2017/7/7
 * Time: 16:48
 */
namespace app\admin\controller;

use app\common\controller\AdminCommon;
use app\admin\model\Category as CategoryModel;

/**
 * 分类管理控制器
 * Class Category
 * @package app\admin\controller
 */
class Category extends AdminCommon{
    protected $category_model;

    protected function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        $this->category_model = new CategoryModel();

        $category_list = $this->category_model->order(['sort' => 'DESC', 'id' =>'ASC'])->select();

        $category_level_list = array2level($category_list);
        $this->assign('category_level_list', $category_level_list);
    }

    public function index()
    {
        return $this->fetch();
    }

    /**
     * 添加分类
     * @param string $pid
     * @return mixed
     */
    public function add($pid = '')
    {
        return $this->fetch('add', ['pid' => $pid]);
    }

    /**
     * 保存分类
     */
    public function save()
    {
        if($this->request->isPost()) {
            $data = $this->request->post();
            $validate_result = $this->validate($data, 'Category');

            if(true !== $validate_result) {
                $this->error($validate_result);
            } else {
                $res = $this->category_model->save($data);

                if(false !== $res) {
                    $this->success('保存成功');
                } else {
                    $this->error('保存失败');
                }
            }
        }
    }

    /**
     * 编辑分类
     * @param $id
     */
    public function edit($id)
    {
        $category = $this->category_model->find($id);

        return $this->fetch('edit', ['category' => $category]);
    }

    /**
     * 更新分类
     * @param $id
     */
    public function update($id)
    {
        if($this->request->isPost()) {
            $data = $this->request->post();
            $validate_result = $this->validate($data, 'Category');

            if(true !== $validate_result) {
                $this->error($validate_result);
            } else {
                if($data['pid'] == $id) {
                    $this->error('上级分类不能选择自己');
                }else {
                    $res = $this->category_model->allowField(true)->save($data, $id);

                    if (false !== $res) {
                        $this->success('更新成功');
                    } else {
                        $this->error('更新失败');
                    }
                }
            }
        }
    }

    /**
     * 删除栏目
     * @param $id
     */
    public function delete($id)
    {
        $category = $this->category_model->where(['pid' => $id])->find();

        if (!empty($category)) {
            $this->error('此分类下存在子分类，不可删除');
        }
        $res = $this->category_model->destroy($id);
        if (false !== $res) {
            $this->success('删除成功');
        } else {
            $this->error('删除失败');
        }
    }

    /**
     * 列表排序
     */
    public function sorting($data = array())
    {
        if($this->request->isPost()) {
            $data      = $this->request->post();
            if(!is_array($data)) {
                $this->error('数据不是数组');
            }
            $sort_data = $data['sort'];

            foreach($sort_data as $v){
                $sort['id']   = $v[0];
                $sort['sort'] = $v[1];

                if(is_numeric($sort['sort'])) {
                    $res = $this->category_model->save($sort, $sort['id']);
                }
            }
            if(false !== $res) {
                $this->success('排序成功');
            } else {
                $this->error('排序失败');
            }
        }
    }
}
