<?php
/**
 * Created by PhpStorm.
 * User: Jason
 * Date: 2017/7/5
 * Time: 15:10
 */
namespace app\admin\controller;

use app\common\controller\AdminCommon;
use app\admin\model\AuthRule as AuthRuleModel;
use app\admin\model\AuthGroup as AuthGroupModel;

class AuthGroup extends AdminCommon{

    protected $auth_rule_model;
    protected $auth_group_model;

    protected function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        $this->auth_rule_model = new AuthRuleModel();
        $this->auth_group_model = new AuthGroupModel();
    }

    public function index()
    {
        $auth_group_list = $this->auth_group_model->field('id,title,status,description')->select();

        return $this->fetch('index', ['auth_group_list' => $auth_group_list]);
    }

    /**
     * 添加权限组
     * @return mixed
     */
    public function add()
    {
        return $this->fetch();
    }

    /**
     * 保存权限组
     */
    public function save()
    {
        if($this->request->isPost()) {
            $data = $this->request->post();
            $validate_result = $this->validate($data, 'AuthGroup');

            if(true !== $validate_result) {
                $this->error($validate_result);
            } else {
                $res = $this->auth_group_model->allowField(true)->save($data);
                if (false !== $res) {
                    $this->success('保存成功');
                } else {
                    $this->error('保存失败');
                }
            }
        }
    }

    /**
     * 编辑权限组
     * @param $id
     */
    public function edit($id)
    {
        $auth_group= $this->auth_group_model->find($id);

        return $this->fetch('edit', ['auth_group' => $auth_group]);
    }

    /**
     * 更新权限组
     * @param $id
     */
    public function update($id)
    {
        if($this->request->isPost()) {
            $data = $this->request->post();
            $validate_result = $this->validate($data, 'AuthGroup');
            if(true !== $validate_result) {
                $this->error($validate_result);
            } else {
                if ($id == 1 && $data['status'] != 1) {
                    $this->error('超级管理员不可禁用');
                }

                $res = $this->auth_group_model->allowField(true)->save($data, $id);

                if (false !== $res) {
                    $this->success('更新成功');
                } else {
                    $this->error('更新失败');
                }
            }
        }
    }

    /**
     * 删除权限组
     * @param $id
     */
    public function delete($id)
    {
        if($this->request->isGet()) {
            if ($id == 1) {
                $this->error('超级管理员不可删除');
            }
            $res = $this->auth_group_model->destroy($id);

            if (false !== $res) {
                $this->success('删除成功');
            } else {
                $this->error('删除失败');
            }
        }
    }

    /**
     * 状态开关控制
     * @param $id
     */
    public function switchStatus($id)
    {
        if($this->request->isPost()) {
            $data = $this->request->post();

            if ($id == 1 && $data['status'] != 1) {
                $this->error('超级管理员不可禁用');
            }

            if(!is_array($data)) {
                $this->error('参数只能为数组');
            }
            $res = $this->auth_group_model->save($data, $id);

            if(false !== $res) {
                $this->success('修改成功');
            } else {
                $this->error('修改失败');
            }
        }
    }

    /**
     * 权限组授权
     * @param $id
     */
    public function auth($id)
    {
        return $this->fetch('auth', ['id'=>$id]);
    }

    /**
     * 获取树形规则数据
     * @param $id
     */
    public function getJson($id)
    {
        $auth_group_data = $this->auth_group_model->find($id)->toArray();
        $auth_rules      = explode(',', $auth_group_data['rules']);
        $auth_rule_list  = $this->auth_rule_model->field('id,pid,title')->select();

        foreach($auth_rule_list as $key => $value) {
            in_array($value['id'], $auth_rules) && $auth_rule_list[$key]['checked'] = true;
        }

        return $auth_rule_list;
    }

    /**
     * 更新权限组权限
     * @param $id
     * @param string $auth_rule_ids
     */
    public function updateAuthGroupRule($id, $auth_rule_ids = '')
    {
        if($this->request->isPost()) {
            if(is_numeric($id)) {
                $group_data['id']    = $id;
                $group_data['rules'] = is_array($auth_rule_ids) ? implode(',', $auth_rule_ids) : '';

                $res = $this->auth_group_model->allowField(true)->save($group_data, $id);
                if(false !== $res) {
                    $this->success('授权成功');
                } else {
                    $this->error('授权失败');
                }
            }
        }
    }
}