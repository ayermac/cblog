<?php
/**
 * Created by PhpStorm.
 * User: Jason
 * Date: 2017/7/4
 * Time: 10:31
 */
namespace app\admin\controller;

use app\common\controller\AdminCommon;
use app\admin\model\AuthRule;

/**
 * 后台节点管理
 * Class Menu
 * @package app\admin\controller
 */
class Menu extends AdminCommon{
    protected $authrule;
    protected function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        $this->authrule = new AuthRule();
        $admin_menu_list = $this->authrule->order(['sort' => 'DESC','id' => 'ASC'])->select();
        $admin_menu_level_list = array2level($admin_menu_list);

        $this->assign('admin_menu_level_list', $admin_menu_level_list);
    }

    /**
     * 后台节点
     * @return mixed
     */
    public function index()
    {
        return $this->fetch();
    }

    /**
     * 添加节点
     * @return mixed
     */
    public function add($pid = '')
    {
        return $this->fetch('add', ['pid' => $pid]);
    }

    /**
     * 保存节点
     */
    public function save()
    {
        if($this->request->isPost()) {
            $data            = $this->request->post();
            $validate_result = $this->validate($data, 'Menu');

            if(true !== $validate_result) {
                $this->error($validate_result);
            } else {
                $add = $this->authrule->save($data);
                if(false !== $add) {
                    $this->success('保存成功');
                } else {
                    $this->error('保存失败');
                }
            }
        }
    }

    /*
     * 编辑节点
     */
    public function edit($id)
    {
        if(!is_numeric($id)) {
            $this->error('id只能为数字');
        }
        $admin_menu = $this->authrule->find($id);

        return $this->fetch('edit', ['admin_menu' => $admin_menu]);

    }

    /**
     * 更新节点
     */
    public function update($id)
    {
        if($this->request->isPost()) {
            $data            = $this->request->post();
            $validate_result = $this->validate($data, 'Menu');

            if(true !== $validate_result) {
                $this->error($validate_result);
            } else {
                $res = $this->authrule->save($data, $id);

                if(false !== $res) {
                    $this->success('更新成功');
                } else {
                    $this->error('更新失败');
                }
            }
        }
    }

    /**
     * 删除节点
     * @param $id
     */
    public function delete($id)
    {
        if($this->request->isGet()) {
            $child_menu = $this->authrule->where(['pid' => $id])->find();

            if(!empty($child_menu)) {
                $this->error('此节点存在子节点，不可删除');
            }
            $res = $this->authrule->destroy($id);
            if(false !== $res) {
                $this->success('删除成功');
            } else {
                $this->error('删除失败');
            }
        }
    }

    /**
     * 状态开关控制
     * @param $id
     */
    public function switchStatus($id)
    {
        if($this->request->isPost()) {
            $data = $this->request->post();

            if(!is_array($data)) {
                $this->error('参数只能为数组');
            }
            $res = $this->authrule->save($data, $id);

            if(false !== $res) {
                $this->success('修改成功');
            } else {
                $this->error('修改失败');
            }
        }
    }

    /**
     * 列表排序
     */
    public function sorting($data = array())
    {
        if($this->request->isPost()) {
            $data      = $this->request->post();
            if(!is_array($data)) {
                $this->error('数据不是数组');
            }
            $sort_data = $data['sort'];

            foreach($sort_data as $v){
                $sort['id']   = $v[0];
                $sort['sort'] = $v[1];

                if(is_numeric($sort['sort'])) {
                    $res = $this->authrule->save($sort, $sort['id']);
                }
            }
            if(false !== $res) {
                $this->success('排序成功');
            } else {
                $this->error('排序失败');
            }
        }
    }
}