<?php
/**
 * Created by PhpStorm.
 * User: Jason
 * Date: 2017/7/26
 * Time: 2:13
 */
namespace app\admin\controller;

use app\admin\model\Link as LinkModel;
use app\common\controller\AdminCommon;
use think\Db;

/**
 * 友情链接控制器
 * Class Link
 * @package app\admin\controller
 */
class Link extends AdminCommon{

    protected $link_model;

    protected function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        $this->link_model = new LinkModel();
    }

    public function index()
    {
        $link_list = $this->link_model->order(['sort'=>'DESC'])->select();

        return $this->fetch('index', ['link_list' => $link_list]);
    }

    /**
     * 添加友情链接
     * @return mixed
     */
    public function add()
    {
        return $this->fetch();
    }

    /**
     * 保存友情链接
     */
    public function save()
    {
        if($this->request->isPost()) {
            $data            = $this->request->post();
            $validate_result = $this->validate($data, 'Link');

            if(true !== $validate_result) {
                $this->error($validate_result);
            } else {
                $res = $this->link_model->allowField(true)->save($data);

                if($res !== false) {
                    $this->success('保存成功');
                } else {
                    $this->error('保存失败');
                }
            }
        }
    }

    /**
     * 编辑友情链接
     * @param $id
     */
    public function edit($id)
    {
        $link = $this->link_model->find($id);

        return $this->fetch('edit', ['link' => $link]);
    }

    /**
     * 更新友情链接
     * @param $id
     */
    public function update($id)
    {
        if ($this->request->isPost()) {
            $data            = $this->request->post();
            $validate_result = $this->validate($data, 'Link');

            if (true !== $validate_result) {
                $this->error($validate_result);
            } else {
                $res = $this->link_model->allowField(true)->save($data, $id);
                if (false !== $res) {
                    $this->success('更新成功');
                } else {
                    $this->error('更新失败');
                }
            }
        }
    }

    /**
     * 删除友情链接
     * @param $id
     */
    public function delete($id)
    {
        if($this->request->isGet()) {

            $res = $this->link_model->destroy($id);
            if(false !== $res) {
                $this->success('删除成功');
            } else {
                $this->error('删除失败');
            }
        }
    }

    /**
     * 状态开关控制
     * @param $id
     */
    public function switchStatus($id)
    {
        if($this->request->isPost()) {
            $data = $this->request->post();

            if(!is_array($data)) {
                $this->error('参数只能为数组');
            }
            $res = $this->link_model->save($data, $id);

            if(false !== $res) {
                $this->success('修改成功');
            } else {
                $this->error('修改失败');
            }
        }
    }

    /**
     * 列表排序
     */
    public function sorting($data = array())
    {
        if($this->request->isPost()) {
            $data      = $this->request->post();
            if(!is_array($data)) {
                $this->error('数据不是数组');
            }
            $sort_data = $data['sort'];

            foreach($sort_data as $v){
                $sort['id']   = $v[0];
                $sort['sort'] = $v[1];

                if(is_numeric($sort['sort'])) {
                    $res = $this->link_model->save($sort, $sort['id']);
                }
            }
            if(false !== $res) {
                $this->success('排序成功');
            } else {
                $this->error('排序失败');
            }
        }
    }
}